// Your access token can be found at: https://cesium.com/ion/tokens.

Cesium.Ion.defaultAccessToken =
  "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiI4MTI4YjU4ZS05M2I2LTQwMTAtOTEyMS01MGZiZmYwYWZmZjIiLCJpZCI6NzY0MjcsImlhdCI6MTYzOTQ0OTIyNH0.dN_LLPe0iC_dpb5SwUlSOIN9S0xqa-B0xgzEFPi1oDY";

// token 
var viewer = new Cesium.Viewer("cesiumContainer");
function xmlToJson(xml) {
  'use strict';
  // Create the return object
  var obj = {}, i, j, attribute, item, nodeName, old;

  if (xml.nodeType === 1) { // element
    // do attributes
    if (xml.attributes.length > 0) {
      obj["attributes"] = {};
      for (j = 0; j < xml.attributes.length; j = j + 1) {
        attribute = xml.attributes.item(j);
        obj["attributes"][attribute.nodeName] = attribute.nodeValue;
      }
    }
  }
  // do children
  if (xml.hasChildNodes()) {
    for (i = 0; i < xml.childNodes.length; i = i + 1) {
      item = xml.childNodes.item(i);
      nodeName = item.nodeName;
      if (nodeName !== '#text') {
        if ((obj[nodeName]) === undefined) {
          obj[nodeName] = xmlToJson(item);
        } else {
          if ((obj[nodeName].push) === undefined) {
            old = obj[nodeName];
            obj[nodeName] = [];
            obj[nodeName].push(old);
          }
          obj[nodeName].push(xmlToJson(item));
        }
      }
    }
  }
  return obj;
};
function parseXml(xml) {
  var dom = null;
  if (window.DOMParser) {
    try {
      dom = (new DOMParser()).parseFromString(xml, "text/xml");
    }
    catch (e) { dom = null; }
  }
  else if (window.ActiveXObject) {
    try {
      dom = new ActiveXObject('Microsoft.XMLDOM');
      dom.async = false;
      if (!dom.loadXML(xml)) // parse error ..
        window.alert(dom.parseError.reason + dom.parseError.srcText);
    }
    catch (e) { dom = null; }
  }
  else
    alert("Can't parse!");
  return dom;
}
async function getData() {
  const response = await fetch(`https://s3.amazonaws.com/CMSTest/squaw_creek_container_info.xml?fbclid=IwAR0YUCBa-S_HrMLiXeJTsXdmBXJbLa3PoyCBjJKNlRggthLfNYcCxTogiuo`);
  var data = await response.text();
  const dom = parseXml(data);
  const dataXML = xmlToJson(dom)
  return dataXML;
}
getData().then(data => {
  function createPolygon(start, end, id) {
    var array = [];
    // var dataclick = [
    //   {
    //     id: id,
    //     Polygon: {
    //       Faces: {
    //         id: id,
    //         face: []
    //       },
    //       Lines: [],
    //       Points: []
    //     }
    //   }
    // ];

    for (var i = start; i < end; i++) {
      for (var j = 0; j < data.STRUCTURES.ROOF.POINTS.POINT[i].attributes.data.split(", ").length; j++) {
        var point = parseFloat((data.STRUCTURES.ROOF.POINTS.POINT[i].attributes.data.split(", ")[j]))
        array.push(point);
      }

    }
    var displayPolygon = viewer.entities.add({
      polygon: {
        hierarchy: Cesium.Cartesian3.fromDegreesArrayHeights(array),
        perPositionHeight: true,
        material: Cesium.Color.WHITE.withAlpha(0.5),
        outline: true,
        outlineColor: Cesium.Color.BLACK.withAlpha(),
      },
      id: id // display F0, F1, F2, ...
    });

    // for (var i = 0; i < 8; i++) {
    //   if (data.STRUCTURES.ROOF.FACES.FACE[i].attributes.id === displayPolygon.id) {
    //     for (var j = 0; j < data.STRUCTURES.ROOF.FACES.FACE[i].POLYGON.attributes.path.split(", ").length; j++) {
    //       var path = data.STRUCTURES.ROOF.FACES.FACE[i].POLYGON.attributes.path.split(", ")[j];
    //       dataclick[0].Polygon.Faces.face.push(path)
    //     }
    //   }
    // }
    // for (var i = start; i < end; i++) {
    //   var lineData = { id: data.STRUCTURES.ROOF.LINES.LINE[i].attributes.id, line: [] }
    //   for (var j = 0; j < data.STRUCTURES.ROOF.LINES.LINE[i].attributes.path.split(", ").length; j++) {
    //     var path = data.STRUCTURES.ROOF.LINES.LINE[i].attributes.path.split(", ")[j];
    //     lineData.line.push(path)
    //   }
    //   dataclick[0].Polygon.Lines.push(lineData)
    // }

    // for (var i = start; i < end; i++) {
    //   var pointData = { id: data.STRUCTURES.ROOF.POINTS.POINT[i].attributes.id, point: [] }
    //   var path = data.STRUCTURES.ROOF.POINTS.POINT[i].attributes.data.split(", ");
    //   pointData.point.push(path)
    //   dataclick[0].Polygon.Points.push(pointData)
    // }

    // return [dataclick, displayPolygon];
  }
    
  var f0 = createPolygon(0, 8, "F0");
  var f1 = createPolygon(7, 14, "F1");
  var f2 = createPolygon(14, 18, "F2");
  var f3 = createPolygon(17, 22, "F3");
  var f4 = createPolygon(22, 25, "F4");
  var f5 = createPolygon(25, 28, "F5");
  var f6 = createPolygon(28, 31, "F6");
  var f7 = createPolygon(31, 34, "F7");

  var polygonData = [];
  polygonData.push(f0);
  polygonData.push(f1);
  polygonData.push(f2);
  polygonData.push(f3);
  polygonData.push(f4);
  polygonData.push(f5);
  polygonData.push(f6);
  polygonData.push(f7);

  viewer.zoomTo(viewer.entities);


  var handler = new Cesium.ScreenSpaceEventHandler();

  // handler.setInputAction(function (event) {
  //   var pickedPosition = viewer.scene.pick(event.position);

    // if (Cesium.defined(pickedPosition)) {
    //   for (var i = 0; i < polygonData.length; i++) {
    //     if (pickedPosition.id._id === polygonData[i][0][0].id) {

    //       let container = document.getElementById("selectDataTable");
    //       let html = ''
    //       var point = [];

    //       for (var j = 0; j < polygonData[i][0][0].Polygon.Points.length; j++) {
    //         point.push(polygonData[i][0][0].Polygon.Points[j].id)
    //       }
    //       html += `
    //                 <table class="table table-dark table-striped">
    //                 <thead>
    //                     <tr>
    //                     <th scope="col">FaceID</th>
    //                     <th scope="col">Lines</th>
    //                     <th scope="col">Points</th>
    //                     </tr>
    //                 </thead>
    //                 <tbody>
    //                     <tr>
    //                     <th scope="row">${polygonData[i][0][0].id}</th>
    //                     <td>${polygonData[i][0][0].Polygon.Faces.face}</td>
    //                     <td>${point}</td>
    //                     </tr>
    //                 </tbody>
    //                 </table>
    //                 `
    //       container.innerHTML = html
    //       polygonData[i][1].polygon.material = Cesium.Color.RED.withAlpha(0.5)

    //     }
    //     else {
    //       polygonData[i][1].polygon.material = Cesium.Color.WHITE.withAlpha(0.5)
    //     }
    //   }
    // }
    // else {
    //   for (var i = 0; i < polygonData.length; i++) {
    //     polygonData[i][1].polygon.material = Cesium.Color.WHITE.withAlpha(0.5)
    //   }
    // }
  }, Cesium.ScreenSpaceEventType.LEFT_CLICK);

    // var handler = new Cesium.ScreenSpaceEventHandler()

  // }, Cesium.ScreenSpaceEventType.LEFT_CLICK);


